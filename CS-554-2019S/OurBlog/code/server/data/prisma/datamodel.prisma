# Definition of datamodel
type User @model {
  id: ID! @id
  createdAt: DateTime! @createdAt
  name: String!
  password: String!
  email: String! @unique # prisma.user({email: 'unique@email'})
  phone: String
  address: String
  interest: String
  blogs: [Blog!]! @relation(link: INLINE)
  comments: [Comment!]! @relation(link: INLINE)
}

type Blog @model {
  id: ID! @id # Prisma will auto-generate and store globally unique IDs
  createdAt: DateTime! @createdAt # Auto generate the time
  updatedAt: DateTime! @updatedAt
  title: String! @unique
  article: String!
  likes: Int! @default(value: 0)
  postedBy: User # relation field, this is how to express a one-to-many relationship
  comments: [Comment!]! @relation(link: INLINE)
  tags: [Tag!]! @relation(link: INLINE)
}

type Comment @model {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  content: String!
  likes: Int! @default(value: 0)
  postedBy: User
  forBlog: Blog
}

type Tag @model {
  id: ID! @id
  tag: String! @unique
  postedBy: Blog
}

# We can use @embedded instead of @model for documents are not stored in their own collection
# Instead each is stored inside 'Parent' document in the 'Parent' collection.